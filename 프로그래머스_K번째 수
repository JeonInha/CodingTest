class Solution {
    
// 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.
// array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
// 1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
// 2에서 나온 배열의 3번째 숫자는 5입니다.
// 배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.

    
    
    void insertionSort(int[] arr) {

   for(int index = 1 ; index < arr.length ; index++){

      int temp = arr[index];
      int aux = index - 1;

      while( (aux >= 0) && ( arr[aux] > temp ) ) {

         arr[aux + 1] = arr[aux];
         aux--;
      }
      arr[aux + 1] = temp;
   }
}
    
    public int[] solution(int[] array, int[][] commands) {
        int[] answer = new int[commands.length - 1];
        int a = 0;
        int b = 0;
        int c = 0;
        int[] arr = null;
        
        for (int i=0; i<commands.length; i++) {
            for (int j=0; j<3; j++) {
                if (j==0) {
                    a = commands[i][j]-1;           
                } else if (j==1) {
                    b = commands[i][j]-1;   
                } else if (j==2) {
                    c = commands[i][j]-1;
                        ///////////////////
                    arr = new int[b-a];
                    for (int k=a; k<=b; k++) {
                        arr[k-a] = array[k];
                    }
                    //////////////// 배열 만들었고 정렬해야함 ..... 
                    insertionSort(arr);
                }
            }
            answer[i] = arr[c];
        }
        
        return answer;
    }
    
    public static void main(String[] args) {
    	Solution a = new Solution();
    	int[] array = {1, 5, 2, 6, 3, 7, 4};
    	int[][] commands = {{2, 5, 3}, {4, 4, 1}, {1, 7, 3}};
    	System.out.println(a.solution(array, commands));
    }
}


